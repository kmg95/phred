{"ast":null,"code":"var _jsxFileName = \"/Users/karim/phredenv/phredfront/src/components/UpdateObj.component.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { baseURL, headers } from \"./../services/obj.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateObj = () => {\n  _s();\n\n  const initialObjState = {\n    id: null,\n    name: \"\",\n    datum: null,\n    pH: 0.00,\n    SPO2: 0.00,\n    temperature: 0.00,\n    SPO2color: \"\",\n    turbidity: \"\"\n  };\n  let {\n    id\n  } = useParams();\n  const [currentObj, setCurrentObj] = useState(initialObjState);\n  const [submitted, setSubmitted] = useState(false);\n  const countRef = useRef(0);\n  useEffect(() => {\n    retrieveObj();\n  }, [countRef]);\n\n  const handleObjChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentObj({ ...currentObj,\n      [name]: value\n    });\n  };\n\n  const retrieveObj = () => {\n    axios.get(`${baseURL}/obj/${id}/`, {\n      headers: {\n        headers\n      }\n    }).then(response => {\n      setCurrentObj({\n        id: response.data.id,\n        name: response.data.name,\n        datum: response.data.datum,\n        pH: response.data.pH,\n        SPO2: response.data.SPO2,\n        temperature: response.data.temperature,\n        SPO2color: response.data.SPO2color,\n        turbidity: response.data.turbidity\n      });\n      console.log(currentObj);\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n\n  const updateObj = () => {\n    let data = {\n      name: currentObj.name,\n      datum: currentObj.datum,\n      pH: currentObj.pH,\n      SPO2: currentObj.SPO2,\n      temperature: currentObj.temperature,\n      SPO2color: currentObj.SPO2color,\n      turbidity: currentObj.turbidity\n    };\n    axios.put(`${baseURL}/obj/${id}/`, data, {\n      headers: {\n        headers\n      }\n    }).then(response => {\n      setCurrentObj({\n        id: response.data.id,\n        name: response.data.name,\n        datum: response.data.datum,\n        pH: response.data.pH,\n        SPO2: response.data.SPO2,\n        temperature: response.data.temperature,\n        SPO2color: response.data.SPO2color,\n        turbidity: response.data.turbidity\n      });\n      setSubmitted(true);\n      console.log(response.data);\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n\n  const newObj = () => {\n    setCurrentObj(initialObjState);\n    setSubmitted(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submit-form\",\n    children: submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success alert-dismissible fade show\",\n        role: \"alert\",\n        children: [\"Obj Updated!\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"data-dismiss\": \"alert\",\n          \"aria-label\": \"Close\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": \"true\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: newObj,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          required: true,\n          value: currentObj.name,\n          onChange: handleObjChange,\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"description\",\n          required: true,\n          value: currentObj.description,\n          onChange: handleObjChange,\n          name: \"description\",\n          default: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"price\",\n          required: true,\n          value: currentObj.price,\n          onChange: handleObjChange,\n          name: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateObj,\n        className: \"btn btn-success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateObj, \"5APJ7iFL31ZsAbfKxyd7/GDsWb8=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdateObj;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateObj\");","map":{"version":3,"sources":["/Users/karim/phredenv/phredfront/src/components/UpdateObj.component.js"],"names":["axios","React","useState","useEffect","useRef","useParams","baseURL","headers","UpdateObj","initialObjState","id","name","datum","pH","SPO2","temperature","SPO2color","turbidity","currentObj","setCurrentObj","submitted","setSubmitted","countRef","retrieveObj","handleObjChange","e","value","target","get","then","response","data","console","log","catch","error","updateObj","put","newObj","description","price"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACI,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,2BAAjC;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAMC,eAAe,GAAG;AACtBC,IAAAA,EAAE,EAAE,IADkB;AAEtBC,IAAAA,IAAI,EAAE,EAFgB;AAGtBC,IAAAA,KAAK,EAAE,IAHe;AAItBC,IAAAA,EAAE,EAAE,IAJkB;AAKtBC,IAAAA,IAAI,EAAE,IALgB;AAMtBC,IAAAA,WAAW,EAAE,IANS;AAOtBC,IAAAA,SAAS,EAAE,EAPW;AAQtBC,IAAAA,SAAS,EAAE;AARW,GAAxB;AAWA,MAAI;AAAEP,IAAAA;AAAF,MAASL,SAAS,EAAtB;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAACO,eAAD,CAA5C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMoB,QAAQ,GAAGlB,MAAM,CAAC,CAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACD,QAAD,CAFM,CAAT;;AAGA,QAAME,eAAe,GAAIC,CAAD,IAAO;AAC7B,UAAM;AAAEd,MAAAA,IAAF;AAAQe,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAR,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,OAACP,IAAD,GAAQe;AAAzB,KAAD,CAAb;AACD,GAHD;;AAIA,QAAMH,WAAW,GAAG,MAAM;AACxBvB,IAAAA,KAAK,CACF4B,GADH,CACQ,GAAEtB,OAAQ,QAAOI,EAAG,GAD5B,EACgC;AAC5BH,MAAAA,OAAO,EAAE;AACPA,QAAAA;AADO;AADmB,KADhC,EAMGsB,IANH,CAMSC,QAAD,IAAc;AAClBX,MAAAA,aAAa,CAAC;AACVT,QAAAA,EAAE,EAAEoB,QAAQ,CAACC,IAAT,CAAcrB,EADR;AAEVC,QAAAA,IAAI,EAAEmB,QAAQ,CAACC,IAAT,CAAcpB,IAFV;AAGVC,QAAAA,KAAK,EAAEkB,QAAQ,CAACC,IAAT,CAAcnB,KAHX;AAIVC,QAAAA,EAAE,EAAEiB,QAAQ,CAACC,IAAT,CAAclB,EAJR;AAKVC,QAAAA,IAAI,EAAEgB,QAAQ,CAACC,IAAT,CAAcjB,IALV;AAMVC,QAAAA,WAAW,EAAEe,QAAQ,CAACC,IAAT,CAAchB,WANjB;AAOVC,QAAAA,SAAS,EAAEc,QAAQ,CAACC,IAAT,CAAcf,SAPf;AAQVC,QAAAA,SAAS,EAAEa,QAAQ,CAACC,IAAT,CAAcd;AARf,OAAD,CAAb;AAUAe,MAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACD,KAlBH,EAmBGgB,KAnBH,CAmBUT,CAAD,IAAO;AACZO,MAAAA,OAAO,CAACG,KAAR,CAAcV,CAAd;AACD,KArBH;AAsBD,GAvBD;;AAwBA,QAAMW,SAAS,GAAG,MAAM;AACtB,QAAIL,IAAI,GAAG;AACPpB,MAAAA,IAAI,EAAEO,UAAU,CAACP,IADV;AAEPC,MAAAA,KAAK,EAAEM,UAAU,CAACN,KAFX;AAGPC,MAAAA,EAAE,EAAEK,UAAU,CAACL,EAHR;AAIPC,MAAAA,IAAI,EAAEI,UAAU,CAACJ,IAJV;AAKPC,MAAAA,WAAW,EAAEG,UAAU,CAACH,WALjB;AAMPC,MAAAA,SAAS,EAAEE,UAAU,CAACF,SANf;AAOPC,MAAAA,SAAS,EAAEC,UAAU,CAACD;AAPf,KAAX;AASAjB,IAAAA,KAAK,CACFqC,GADH,CACQ,GAAE/B,OAAQ,QAAOI,EAAG,GAD5B,EACgCqB,IADhC,EACsC;AAClCxB,MAAAA,OAAO,EAAE;AACPA,QAAAA;AADO;AADyB,KADtC,EAMGsB,IANH,CAMSC,QAAD,IAAc;AAClBX,MAAAA,aAAa,CAAC;AACVT,QAAAA,EAAE,EAAEoB,QAAQ,CAACC,IAAT,CAAcrB,EADR;AAEVC,QAAAA,IAAI,EAAEmB,QAAQ,CAACC,IAAT,CAAcpB,IAFV;AAGVC,QAAAA,KAAK,EAAEkB,QAAQ,CAACC,IAAT,CAAcnB,KAHX;AAIVC,QAAAA,EAAE,EAAEiB,QAAQ,CAACC,IAAT,CAAclB,EAJR;AAKVC,QAAAA,IAAI,EAAEgB,QAAQ,CAACC,IAAT,CAAcjB,IALV;AAMVC,QAAAA,WAAW,EAAEe,QAAQ,CAACC,IAAT,CAAchB,WANjB;AAOVC,QAAAA,SAAS,EAAEc,QAAQ,CAACC,IAAT,CAAcf,SAPf;AAQVC,QAAAA,SAAS,EAAEa,QAAQ,CAACC,IAAT,CAAcd;AARf,OAAD,CAAb;AAUAI,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,KAnBH,EAoBGG,KApBH,CAoBUT,CAAD,IAAO;AACZO,MAAAA,OAAO,CAACG,KAAR,CAAcV,CAAd;AACD,KAtBH;AAuBD,GAjCD;;AAkCA,QAAMa,MAAM,GAAG,MAAM;AACnBnB,IAAAA,aAAa,CAACV,eAAD,CAAb;AACAY,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACCD,SAAS,gBACR;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,iDADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAAA,gDAKE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,0BAAa,OAHf;AAIE,wBAAW,OAJb;AAAA,iCAME;AAAM,2BAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEkB,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAqBR;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,EAAE,EAAC,MAHL;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,KAAK,EAAEpB,UAAU,CAACP,IALpB;AAME,UAAA,QAAQ,EAAEa,eANZ;AAOE,UAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,EAAE,EAAC,aAHL;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,KAAK,EAAEN,UAAU,CAACqB,WALpB;AAME,UAAA,QAAQ,EAAEf,eANZ;AAOE,UAAA,IAAI,EAAC,aAPP;AAQE,UAAA,OAAO;AART;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eA0BE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,EAAE,EAAC,OAHL;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,KAAK,EAAEN,UAAU,CAACsB,KALpB;AAME,UAAA,QAAQ,EAAEhB,eANZ;AAOE,UAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,eAsCE;AAAQ,QAAA,OAAO,EAAEY,SAAjB;AAA4B,QAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBF;AAAA;AAAA;AAAA;AAAA,UADF;AAoED,CAzJM;;GAAM5B,S;UAYEH,S;;;KAZFG,S","sourcesContent":["import axios from \"axios\";\n    import React, { useState, useEffect, useRef } from \"react\";\n    import { useParams } from \"react-router-dom\";\n    import { baseURL, headers } from \"./../services/obj.service\";\n    export const UpdateObj = () => {\n      const initialObjState = {\n        id: null,\n        name: \"\",\n        datum: null,\n        pH: 0.00,\n        SPO2: 0.00,\n        temperature: 0.00,\n        SPO2color: \"\",\n        turbidity: \"\"\n\n      };\n      let { id } = useParams();\n      const [currentObj, setCurrentObj] = useState(initialObjState);\n      const [submitted, setSubmitted] = useState(false);\n      const countRef = useRef(0);\n      useEffect(() => {\n        retrieveObj();\n      }, [countRef]);\n      const handleObjChange = (e) => {\n        const { name, value } = e.target;\n        setCurrentObj({ ...currentObj, [name]: value });\n      };\n      const retrieveObj = () => {\n        axios\n          .get(`${baseURL}/obj/${id}/`, {\n            headers: {\n              headers,\n            },\n          })\n          .then((response) => {\n            setCurrentObj({\n                id: response.data.id,\n                name: response.data.name,\n                datum: response.data.datum,\n                pH: response.data.pH,\n                SPO2: response.data.SPO2,\n                temperature: response.data.temperature,\n                SPO2color: response.data.SPO2color,\n                turbidity: response.data.turbidity\n            });\n            console.log(currentObj);\n          })\n          .catch((e) => {\n            console.error(e);\n          });\n      };\n      const updateObj = () => {\n        let data = {\n            name: currentObj.name,\n            datum: currentObj.datum,\n            pH: currentObj.pH,\n            SPO2: currentObj.SPO2,\n            temperature: currentObj.temperature,\n            SPO2color: currentObj.SPO2color,\n            turbidity: currentObj.turbidity\n        };\n        axios\n          .put(`${baseURL}/obj/${id}/`, data, {\n            headers: {\n              headers,\n            },\n          })\n          .then((response) => {\n            setCurrentObj({\n                id: response.data.id,\n                name: response.data.name,\n                datum: response.data.datum,\n                pH: response.data.pH,\n                SPO2: response.data.SPO2,\n                temperature: response.data.temperature,\n                SPO2color: response.data.SPO2color,\n                turbidity: response.data.turbidity\n            });\n            setSubmitted(true);\n            console.log(response.data);\n          })\n          .catch((e) => {\n            console.error(e);\n          });\n      };\n      const newObj = () => {\n        setCurrentObj(initialObjState);\n        setSubmitted(false);\n      };\n      return (\n        <div className=\"submit-form\">\n        {submitted ? (\n          <div>\n            <div\n              className=\"alert alert-success alert-dismissible fade show\"\n              role=\"alert\"\n            >\n              Obj Updated!\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <button className=\"btn btn-success\" onClick={newObj}>\n              Update\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                required\n                value={currentObj.name}\n                onChange={handleObjChange}\n                name=\"name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={currentObj.description}\n                onChange={handleObjChange}\n                name=\"description\"\n                default\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"price\">Price</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"price\"\n                required\n                value={currentObj.price}\n                onChange={handleObjChange}\n                name=\"price\"\n              />\n            </div>\n            <button onClick={updateObj} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n      );\n    };"]},"metadata":{},"sourceType":"module"}